rm(list = ls(all = TRUE))
graphics.off()
shell("cls")               # Or press Ctr+L simultaneously
library(readxl)
data = read_excel(path = "C:/Users/parvb/Downloads/data_corr.xlsx",
col_names = TRUE)
attach(data)
View(data)
data = read_excel(path = "C:/Users/parvb/Documents/GitHub/R/Correlation Analysis/data_corr.xlsx",
col_names = TRUE)
library(readxl)
data = read_excel(path = "C:/Users/parvb/Documents/GitHub/R/Correlation Analysis/data_corr.xlsx",
col_names = TRUE)
attach(data)
View(data)
head(data)
tail(data)
fix(data)
library(agricolae)
cor.1 = correl(x = total.tillers,
y = kernal.yield,
method = "pearson",
alternative = "two.sided")
cor.1 = correl(x = total.tillers,
y = kernal.yield,
method = "pearson",
alternative = "two.sided")
str(data)
data$method = as.factor(data$method)
data$priming = as.factor(data$priming)
str(data)
attach(data)
library(agricolae)
cor.1 = correl(x = total.tillers,
y = kernal.yield,
method = "pearson",
alternative = "two.sided")
print(cor.1)
# R squared value
cor.1$rho^2
library(stats)
cor.2 = cor.test(x = total.tillers,
y = kernal.yield,
alternative = "two.sided",
method = "pearson",
conf.level = 0.95)
print(cor.2)
require(stats)
cor.3 = cor(x = data[, c(4:10)], y = NULL,
use = "everything",
method = "pearson")
print(cor.3)
cor.4 = correlation(x = data[, c(4:10)], y = NULL,
method = "pearson",
alternative = "two.sided")
print(cor.4)
cor.4$correlation
cor.4$pvalue
cor.4$n.obs
# OR
# Matrix of correlation with p-value and n
install.packages("Hmisc")
require(Hmisc)
library(readxl)
data = read_excel(path = "C:/Users/parvb/Documents/GitHub/R/Correlation Analysis/data_corr.xlsx",
col_names = TRUE)
attach(data)
View(data)
head(data)
tail(data)
fix(data)
library(agricolae)
cor.1 = correl(x = total.tillers,
y = kernal.yield,
method = "pearson",
alternative = "two.sided")
library(agricolae)
cor.1 = correl(x = t.tillers,
y = kernal.yield,
method = "pearson",
alternative = "two.sided")
cor.1 = correl(x = t.tillers,
y = k.yield,
method = "pearson",
alternative = "two.sided")
print(cor.1)
cor.3 = cor(x = data[, c(4:10)], y = NULL,
use = "everything",
method = "pearson")
print(cor.3)
rm(list = ls(all = TRUE))
graphics.off()
shell("cls")               # Or press Ctr+L simultaneously
library(readxl)
data = read_excel(path = "C:/Users/parvb/Documents/GitHub/R/Correlation Analysis/data_corr.xlsx",
col_names = TRUE)
attach(data)
View(data)
head(data)
tail(data)
fix(data)
library(agricolae)
cor.1 = correl(x = t.tillers,
y = k.yield,
method = "pearson",
alternative = "two.sided")
print(cor.1)
# R squared value
cor.1$rho^2
library(stats)
cor.2 = cor.test(x = t.tillers,
y = k.yield,
alternative = "two.sided",
method = "pearson",
conf.level = 0.95)
print(cor.2)
require(stats)
cor.3 = cor(x = data[, c(4:10)], y = NULL,
use = "everything",
method = "pearson")
print(cor.3)
library(agricolae)
cor.4 = correlation(x = data[, c(4:10)], y = NULL,
method = "pearson",
alternative = "two.sided")
(cor.4)
cor.4$correlation
cor.4$pvalue
cor.4$n.obs
require(Hmisc)
cor.5 = rcorr(x = as.matrix(data[, c(4:10)]), y = NULL,
type ="pearson")
print(cor.5)
